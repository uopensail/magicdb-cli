# Generated from magicdbLexer.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,45,421,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,1,0,1,0,1,1,
        1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,
        1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,
        10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,
        12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,
        14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,
        16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,
        18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,
        20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
        22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,
        24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,
        26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,
        27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,
        29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,
        32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,
        34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,
        36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,
        39,1,39,5,39,322,8,39,10,39,12,39,325,9,39,1,40,1,40,1,40,5,40,330,
        8,40,10,40,12,40,333,9,40,1,40,1,40,1,41,1,41,1,41,3,41,340,8,41,
        1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,44,1,44,1,45,3,45,353,
        8,45,1,45,1,45,1,45,4,45,358,8,45,11,45,12,45,359,3,45,362,8,45,
        1,45,3,45,365,8,45,1,46,1,46,1,46,5,46,370,8,46,10,46,12,46,373,
        9,46,3,46,375,8,46,1,47,1,47,3,47,379,8,47,1,47,1,47,1,48,1,48,1,
        48,1,48,5,48,387,8,48,10,48,12,48,390,9,48,1,48,3,48,393,8,48,1,
        48,1,48,3,48,397,8,48,1,48,1,48,1,49,1,49,1,49,1,49,5,49,405,8,49,
        10,49,12,49,408,9,49,1,49,1,49,1,49,1,49,1,49,1,50,4,50,416,8,50,
        11,50,12,50,417,1,50,1,50,1,406,0,51,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
        81,41,83,0,85,0,87,0,89,0,91,42,93,0,95,0,97,43,99,44,101,45,1,0,
        30,2,0,80,80,112,112,2,0,82,82,114,114,2,0,79,79,111,111,2,0,69,
        69,101,101,2,0,84,84,116,116,2,0,73,73,105,105,2,0,83,83,115,115,
        2,0,87,87,119,119,2,0,72,72,104,104,2,0,68,68,100,100,2,0,65,65,
        97,97,2,0,66,66,98,98,2,0,70,70,102,102,2,0,88,88,120,120,2,0,67,
        67,99,99,2,0,78,78,110,110,2,0,77,77,109,109,2,0,76,76,108,108,2,
        0,85,85,117,117,2,0,86,86,118,118,3,0,65,90,95,95,97,122,4,0,48,
        57,65,90,95,95,97,122,13,0,34,34,47,47,66,66,70,70,78,78,82,82,84,
        84,92,92,98,98,102,102,110,110,114,114,116,116,3,0,48,57,65,70,97,
        102,3,0,0,31,34,34,92,92,1,0,48,57,1,0,49,57,2,0,43,43,45,45,2,0,
        10,10,13,13,3,0,9,10,13,13,32,32,430,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
        1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
        0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
        0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
        0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,
        0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
        0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,
        0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,
        0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,91,1,0,0,0,0,97,1,
        0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,1,103,1,0,0,0,3,105,1,0,0,0,5,107,
        1,0,0,0,7,109,1,0,0,0,9,111,1,0,0,0,11,113,1,0,0,0,13,115,1,0,0,
        0,15,117,1,0,0,0,17,119,1,0,0,0,19,130,1,0,0,0,21,135,1,0,0,0,23,
        140,1,0,0,0,25,149,1,0,0,0,27,152,1,0,0,0,29,159,1,0,0,0,31,164,
        1,0,0,0,33,174,1,0,0,0,35,181,1,0,0,0,37,185,1,0,0,0,39,194,1,0,
        0,0,41,200,1,0,0,0,43,207,1,0,0,0,45,215,1,0,0,0,47,223,1,0,0,0,
        49,227,1,0,0,0,51,233,1,0,0,0,53,238,1,0,0,0,55,247,1,0,0,0,57,256,
        1,0,0,0,59,264,1,0,0,0,61,268,1,0,0,0,63,273,1,0,0,0,65,278,1,0,
        0,0,67,283,1,0,0,0,69,290,1,0,0,0,71,295,1,0,0,0,73,301,1,0,0,0,
        75,308,1,0,0,0,77,313,1,0,0,0,79,319,1,0,0,0,81,326,1,0,0,0,83,336,
        1,0,0,0,85,341,1,0,0,0,87,347,1,0,0,0,89,349,1,0,0,0,91,352,1,0,
        0,0,93,374,1,0,0,0,95,376,1,0,0,0,97,382,1,0,0,0,99,400,1,0,0,0,
        101,415,1,0,0,0,103,104,5,59,0,0,104,2,1,0,0,0,105,106,5,46,0,0,
        106,4,1,0,0,0,107,108,5,40,0,0,108,6,1,0,0,0,109,110,5,41,0,0,110,
        8,1,0,0,0,111,112,5,44,0,0,112,10,1,0,0,0,113,114,5,61,0,0,114,12,
        1,0,0,0,115,116,5,42,0,0,116,14,1,0,0,0,117,118,5,34,0,0,118,16,
        1,0,0,0,119,120,7,0,0,0,120,121,7,1,0,0,121,122,7,2,0,0,122,123,
        7,0,0,0,123,124,7,3,0,0,124,125,7,1,0,0,125,126,7,4,0,0,126,127,
        7,5,0,0,127,128,7,3,0,0,128,129,7,6,0,0,129,18,1,0,0,0,130,131,7,
        7,0,0,131,132,7,5,0,0,132,133,7,4,0,0,133,134,7,8,0,0,134,20,1,0,
        0,0,135,136,7,9,0,0,136,137,7,1,0,0,137,138,7,2,0,0,138,139,7,0,
        0,0,139,22,1,0,0,0,140,141,7,9,0,0,141,142,7,10,0,0,142,143,7,4,
        0,0,143,144,7,10,0,0,144,145,7,11,0,0,145,146,7,10,0,0,146,147,7,
        6,0,0,147,148,7,3,0,0,148,24,1,0,0,0,149,150,7,5,0,0,150,151,7,12,
        0,0,151,26,1,0,0,0,152,153,7,3,0,0,153,154,7,13,0,0,154,155,7,5,
        0,0,155,156,7,6,0,0,156,157,7,4,0,0,157,158,7,6,0,0,158,28,1,0,0,
        0,159,160,7,6,0,0,160,161,7,8,0,0,161,162,7,2,0,0,162,163,7,7,0,
        0,163,30,1,0,0,0,164,165,7,9,0,0,165,166,7,10,0,0,166,167,7,4,0,
        0,167,168,7,10,0,0,168,169,7,11,0,0,169,170,7,10,0,0,170,171,7,6,
        0,0,171,172,7,3,0,0,172,173,7,6,0,0,173,32,1,0,0,0,174,175,7,14,
        0,0,175,176,7,1,0,0,176,177,7,3,0,0,177,178,7,10,0,0,178,179,7,4,
        0,0,179,180,7,3,0,0,180,34,1,0,0,0,181,182,7,15,0,0,182,183,7,2,
        0,0,183,184,7,4,0,0,184,36,1,0,0,0,185,186,7,16,0,0,186,187,7,10,
        0,0,187,188,7,14,0,0,188,189,7,8,0,0,189,190,7,5,0,0,190,191,7,15,
        0,0,191,192,7,3,0,0,192,193,7,6,0,0,193,38,1,0,0,0,194,195,7,10,
        0,0,195,196,7,17,0,0,196,197,7,4,0,0,197,198,7,3,0,0,198,199,7,1,
        0,0,199,40,1,0,0,0,200,201,7,18,0,0,201,202,7,0,0,0,202,203,7,9,
        0,0,203,204,7,10,0,0,204,205,7,4,0,0,205,206,7,3,0,0,206,42,1,0,
        0,0,207,208,7,14,0,0,208,209,7,18,0,0,209,210,7,1,0,0,210,211,7,
        1,0,0,211,212,7,3,0,0,212,213,7,15,0,0,213,214,7,4,0,0,214,44,1,
        0,0,0,215,216,7,16,0,0,216,217,7,10,0,0,217,218,7,14,0,0,218,219,
        7,8,0,0,219,220,7,5,0,0,220,221,7,15,0,0,221,222,7,3,0,0,222,46,
        1,0,0,0,223,224,7,10,0,0,224,225,7,9,0,0,225,226,7,9,0,0,226,48,
        1,0,0,0,227,228,7,4,0,0,228,229,7,10,0,0,229,230,7,11,0,0,230,231,
        7,17,0,0,231,232,7,3,0,0,232,50,1,0,0,0,233,234,7,9,0,0,234,235,
        7,3,0,0,235,236,7,6,0,0,236,237,7,14,0,0,237,52,1,0,0,0,238,239,
        7,9,0,0,239,240,7,3,0,0,240,241,7,6,0,0,241,242,7,14,0,0,242,243,
        7,1,0,0,243,244,7,5,0,0,244,245,7,11,0,0,245,246,7,3,0,0,246,54,
        1,0,0,0,247,248,7,19,0,0,248,249,7,3,0,0,249,250,7,1,0,0,250,251,
        7,6,0,0,251,252,7,5,0,0,252,253,7,2,0,0,253,254,7,15,0,0,254,255,
        7,6,0,0,255,56,1,0,0,0,256,257,7,19,0,0,257,258,7,3,0,0,258,259,
        7,1,0,0,259,260,7,6,0,0,260,261,7,5,0,0,261,262,7,2,0,0,262,263,
        7,15,0,0,263,58,1,0,0,0,264,265,7,6,0,0,265,266,7,3,0,0,266,267,
        7,4,0,0,267,60,1,0,0,0,268,269,7,17,0,0,269,270,7,2,0,0,270,271,
        7,10,0,0,271,272,7,9,0,0,272,62,1,0,0,0,273,274,7,9,0,0,274,275,
        7,10,0,0,275,276,7,4,0,0,276,277,7,10,0,0,277,64,1,0,0,0,278,279,
        7,5,0,0,279,280,7,15,0,0,280,281,7,4,0,0,281,282,7,2,0,0,282,66,
        1,0,0,0,283,284,7,6,0,0,284,285,7,3,0,0,285,286,7,17,0,0,286,287,
        7,3,0,0,287,288,7,14,0,0,288,289,7,4,0,0,289,68,1,0,0,0,290,291,
        7,12,0,0,291,292,7,1,0,0,292,293,7,2,0,0,293,294,7,16,0,0,294,70,
        1,0,0,0,295,296,7,7,0,0,296,297,7,8,0,0,297,298,7,3,0,0,298,299,
        7,1,0,0,299,300,7,3,0,0,300,72,1,0,0,0,301,302,7,4,0,0,302,303,7,
        10,0,0,303,304,7,11,0,0,304,305,7,17,0,0,305,306,7,3,0,0,306,307,
        7,6,0,0,307,74,1,0,0,0,308,309,7,4,0,0,309,310,7,1,0,0,310,311,7,
        18,0,0,311,312,7,3,0,0,312,76,1,0,0,0,313,314,7,12,0,0,314,315,7,
        10,0,0,315,316,7,17,0,0,316,317,7,6,0,0,317,318,7,3,0,0,318,78,1,
        0,0,0,319,323,7,20,0,0,320,322,7,21,0,0,321,320,1,0,0,0,322,325,
        1,0,0,0,323,321,1,0,0,0,323,324,1,0,0,0,324,80,1,0,0,0,325,323,1,
        0,0,0,326,331,3,15,7,0,327,330,3,83,41,0,328,330,3,89,44,0,329,327,
        1,0,0,0,329,328,1,0,0,0,330,333,1,0,0,0,331,329,1,0,0,0,331,332,
        1,0,0,0,332,334,1,0,0,0,333,331,1,0,0,0,334,335,3,15,7,0,335,82,
        1,0,0,0,336,339,5,92,0,0,337,340,7,22,0,0,338,340,3,85,42,0,339,
        337,1,0,0,0,339,338,1,0,0,0,340,84,1,0,0,0,341,342,7,18,0,0,342,
        343,3,87,43,0,343,344,3,87,43,0,344,345,3,87,43,0,345,346,3,87,43,
        0,346,86,1,0,0,0,347,348,7,23,0,0,348,88,1,0,0,0,349,350,8,24,0,
        0,350,90,1,0,0,0,351,353,5,45,0,0,352,351,1,0,0,0,352,353,1,0,0,
        0,353,354,1,0,0,0,354,361,3,93,46,0,355,357,5,46,0,0,356,358,7,25,
        0,0,357,356,1,0,0,0,358,359,1,0,0,0,359,357,1,0,0,0,359,360,1,0,
        0,0,360,362,1,0,0,0,361,355,1,0,0,0,361,362,1,0,0,0,362,364,1,0,
        0,0,363,365,3,95,47,0,364,363,1,0,0,0,364,365,1,0,0,0,365,92,1,0,
        0,0,366,375,5,48,0,0,367,371,7,26,0,0,368,370,7,25,0,0,369,368,1,
        0,0,0,370,373,1,0,0,0,371,369,1,0,0,0,371,372,1,0,0,0,372,375,1,
        0,0,0,373,371,1,0,0,0,374,366,1,0,0,0,374,367,1,0,0,0,375,94,1,0,
        0,0,376,378,7,3,0,0,377,379,7,27,0,0,378,377,1,0,0,0,378,379,1,0,
        0,0,379,380,1,0,0,0,380,381,3,93,46,0,381,96,1,0,0,0,382,383,5,45,
        0,0,383,384,5,45,0,0,384,388,1,0,0,0,385,387,8,28,0,0,386,385,1,
        0,0,0,387,390,1,0,0,0,388,386,1,0,0,0,388,389,1,0,0,0,389,396,1,
        0,0,0,390,388,1,0,0,0,391,393,5,13,0,0,392,391,1,0,0,0,392,393,1,
        0,0,0,393,394,1,0,0,0,394,397,5,10,0,0,395,397,5,0,0,1,396,392,1,
        0,0,0,396,395,1,0,0,0,397,398,1,0,0,0,398,399,6,48,0,0,399,98,1,
        0,0,0,400,401,5,47,0,0,401,402,5,42,0,0,402,406,1,0,0,0,403,405,
        9,0,0,0,404,403,1,0,0,0,405,408,1,0,0,0,406,407,1,0,0,0,406,404,
        1,0,0,0,407,409,1,0,0,0,408,406,1,0,0,0,409,410,5,42,0,0,410,411,
        5,47,0,0,411,412,1,0,0,0,412,413,6,49,0,0,413,100,1,0,0,0,414,416,
        7,29,0,0,415,414,1,0,0,0,416,417,1,0,0,0,417,415,1,0,0,0,417,418,
        1,0,0,0,418,419,1,0,0,0,419,420,6,50,0,0,420,102,1,0,0,0,17,0,323,
        329,331,339,352,359,361,364,371,374,378,388,392,396,406,417,1,6,
        0,0
    ]

class magicdbLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    SCOL = 1
    DOT = 2
    OPEN_PAR = 3
    CLOSE_PAR = 4
    COMMA = 5
    ASSIGN = 6
    STAR = 7
    QUOTA = 8
    PROPERTIES = 9
    WITH = 10
    DROP = 11
    DATABASE = 12
    IF = 13
    EXISTS = 14
    SHOW = 15
    DATABASES = 16
    CREATE = 17
    NOT = 18
    MACHINES = 19
    ALTER = 20
    UPDATE = 21
    CURRENT = 22
    MACHINE = 23
    ADD = 24
    TABLE = 25
    DESC = 26
    DESCRIBE = 27
    VERSIONS = 28
    VERSION = 29
    SET = 30
    LOAD = 31
    DATA = 32
    INTO = 33
    SELECT = 34
    FROM = 35
    WHERE = 36
    TABLES = 37
    TRUE = 38
    FALSE = 39
    VARNAME = 40
    STRING = 41
    NUMBER = 42
    SINGLE_LINE_COMMENT = 43
    MULTILINE_COMMENT = 44
    WS = 45

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'.'", "'('", "')'", "','", "'='", "'*'", "'\"'", "'PROPERTIES'", 
            "'WITH'", "'DROP'", "'DATABASE'", "'IF'", "'EXISTS'", "'SHOW'", 
            "'DATABASES'", "'CREATE'", "'NOT'", "'MACHINES'", "'ALTER'", 
            "'UPDATE'", "'CURRENT'", "'MACHINE'", "'ADD'", "'TABLE'", "'DESC'", 
            "'DESCRIBE'", "'VERSIONS'", "'VERSION'", "'SET'", "'LOAD'", 
            "'DATA'", "'INTO'", "'SELECT'", "'FROM'", "'WHERE'", "'TABLES'", 
            "'TRUE'", "'FALSE'" ]

    symbolicNames = [ "<INVALID>",
            "SCOL", "DOT", "OPEN_PAR", "CLOSE_PAR", "COMMA", "ASSIGN", "STAR", 
            "QUOTA", "PROPERTIES", "WITH", "DROP", "DATABASE", "IF", "EXISTS", 
            "SHOW", "DATABASES", "CREATE", "NOT", "MACHINES", "ALTER", "UPDATE", 
            "CURRENT", "MACHINE", "ADD", "TABLE", "DESC", "DESCRIBE", "VERSIONS", 
            "VERSION", "SET", "LOAD", "DATA", "INTO", "SELECT", "FROM", 
            "WHERE", "TABLES", "TRUE", "FALSE", "VARNAME", "STRING", "NUMBER", 
            "SINGLE_LINE_COMMENT", "MULTILINE_COMMENT", "WS" ]

    ruleNames = [ "SCOL", "DOT", "OPEN_PAR", "CLOSE_PAR", "COMMA", "ASSIGN", 
                  "STAR", "QUOTA", "PROPERTIES", "WITH", "DROP", "DATABASE", 
                  "IF", "EXISTS", "SHOW", "DATABASES", "CREATE", "NOT", 
                  "MACHINES", "ALTER", "UPDATE", "CURRENT", "MACHINE", "ADD", 
                  "TABLE", "DESC", "DESCRIBE", "VERSIONS", "VERSION", "SET", 
                  "LOAD", "DATA", "INTO", "SELECT", "FROM", "WHERE", "TABLES", 
                  "TRUE", "FALSE", "VARNAME", "STRING", "ESC", "UNICODE", 
                  "HEX", "SAFECODEPOINT", "NUMBER", "INT", "EXP", "SINGLE_LINE_COMMENT", 
                  "MULTILINE_COMMENT", "WS" ]

    grammarFileName = "magicdbLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


