# Generated from magicdbLexer.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,44,391,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,1,0,1,0,1,1,1,1,1,2,1,
        2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,
        10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,
        16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,
        18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,
        20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,
        22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,
        24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,
        26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,
        28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,30,1,
        30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,
        32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,
        35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,
        37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,
        39,1,39,1,40,1,40,5,40,324,8,40,10,40,12,40,327,9,40,1,41,1,41,1,
        41,5,41,332,8,41,10,41,12,41,335,9,41,1,41,1,41,1,42,1,42,1,42,3,
        42,342,8,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,45,1,45,1,
        46,3,46,355,8,46,1,46,1,46,1,46,4,46,360,8,46,11,46,12,46,361,3,
        46,364,8,46,1,46,3,46,367,8,46,1,47,1,47,1,47,5,47,372,8,47,10,47,
        12,47,375,9,47,3,47,377,8,47,1,48,1,48,3,48,381,8,48,1,48,1,48,1,
        49,4,49,386,8,49,11,49,12,49,387,1,49,1,49,0,0,50,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
        16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
        27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
        38,77,39,79,40,81,41,83,42,85,0,87,0,89,0,91,0,93,43,95,0,97,0,99,
        44,1,0,31,2,0,80,80,112,112,2,0,82,82,114,114,2,0,79,79,111,111,
        2,0,69,69,101,101,2,0,84,84,116,116,2,0,73,73,105,105,2,0,83,83,
        115,115,2,0,87,87,119,119,2,0,72,72,104,104,2,0,68,68,100,100,2,
        0,65,65,97,97,2,0,66,66,98,98,2,0,70,70,102,102,2,0,88,88,120,120,
        2,0,67,67,99,99,2,0,78,78,110,110,2,0,77,77,109,109,2,0,76,76,108,
        108,2,0,85,85,117,117,2,0,86,86,118,118,2,0,75,75,107,107,2,0,89,
        89,121,121,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,13,
        0,34,34,47,47,66,66,70,70,78,78,82,82,84,84,92,92,98,98,102,102,
        110,110,114,114,116,116,3,0,48,57,65,70,97,102,3,0,0,31,34,34,92,
        92,1,0,48,57,1,0,49,57,2,0,43,43,45,45,3,0,9,10,13,13,32,32,396,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
        1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
        1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
        1,0,0,0,0,83,1,0,0,0,0,93,1,0,0,0,0,99,1,0,0,0,1,101,1,0,0,0,3,103,
        1,0,0,0,5,105,1,0,0,0,7,107,1,0,0,0,9,109,1,0,0,0,11,111,1,0,0,0,
        13,113,1,0,0,0,15,115,1,0,0,0,17,117,1,0,0,0,19,128,1,0,0,0,21,133,
        1,0,0,0,23,138,1,0,0,0,25,147,1,0,0,0,27,150,1,0,0,0,29,157,1,0,
        0,0,31,162,1,0,0,0,33,172,1,0,0,0,35,179,1,0,0,0,37,183,1,0,0,0,
        39,192,1,0,0,0,41,198,1,0,0,0,43,205,1,0,0,0,45,213,1,0,0,0,47,221,
        1,0,0,0,49,225,1,0,0,0,51,231,1,0,0,0,53,236,1,0,0,0,55,245,1,0,
        0,0,57,254,1,0,0,0,59,262,1,0,0,0,61,266,1,0,0,0,63,271,1,0,0,0,
        65,276,1,0,0,0,67,281,1,0,0,0,69,288,1,0,0,0,71,293,1,0,0,0,73,299,
        1,0,0,0,75,303,1,0,0,0,77,310,1,0,0,0,79,315,1,0,0,0,81,321,1,0,
        0,0,83,328,1,0,0,0,85,338,1,0,0,0,87,343,1,0,0,0,89,349,1,0,0,0,
        91,351,1,0,0,0,93,354,1,0,0,0,95,376,1,0,0,0,97,378,1,0,0,0,99,385,
        1,0,0,0,101,102,5,59,0,0,102,2,1,0,0,0,103,104,5,46,0,0,104,4,1,
        0,0,0,105,106,5,40,0,0,106,6,1,0,0,0,107,108,5,41,0,0,108,8,1,0,
        0,0,109,110,5,44,0,0,110,10,1,0,0,0,111,112,5,61,0,0,112,12,1,0,
        0,0,113,114,5,42,0,0,114,14,1,0,0,0,115,116,5,34,0,0,116,16,1,0,
        0,0,117,118,7,0,0,0,118,119,7,1,0,0,119,120,7,2,0,0,120,121,7,0,
        0,0,121,122,7,3,0,0,122,123,7,1,0,0,123,124,7,4,0,0,124,125,7,5,
        0,0,125,126,7,3,0,0,126,127,7,6,0,0,127,18,1,0,0,0,128,129,7,7,0,
        0,129,130,7,5,0,0,130,131,7,4,0,0,131,132,7,8,0,0,132,20,1,0,0,0,
        133,134,7,9,0,0,134,135,7,1,0,0,135,136,7,2,0,0,136,137,7,0,0,0,
        137,22,1,0,0,0,138,139,7,9,0,0,139,140,7,10,0,0,140,141,7,4,0,0,
        141,142,7,10,0,0,142,143,7,11,0,0,143,144,7,10,0,0,144,145,7,6,0,
        0,145,146,7,3,0,0,146,24,1,0,0,0,147,148,7,5,0,0,148,149,7,12,0,
        0,149,26,1,0,0,0,150,151,7,3,0,0,151,152,7,13,0,0,152,153,7,5,0,
        0,153,154,7,6,0,0,154,155,7,4,0,0,155,156,7,6,0,0,156,28,1,0,0,0,
        157,158,7,6,0,0,158,159,7,8,0,0,159,160,7,2,0,0,160,161,7,7,0,0,
        161,30,1,0,0,0,162,163,7,9,0,0,163,164,7,10,0,0,164,165,7,4,0,0,
        165,166,7,10,0,0,166,167,7,11,0,0,167,168,7,10,0,0,168,169,7,6,0,
        0,169,170,7,3,0,0,170,171,7,6,0,0,171,32,1,0,0,0,172,173,7,14,0,
        0,173,174,7,1,0,0,174,175,7,3,0,0,175,176,7,10,0,0,176,177,7,4,0,
        0,177,178,7,3,0,0,178,34,1,0,0,0,179,180,7,15,0,0,180,181,7,2,0,
        0,181,182,7,4,0,0,182,36,1,0,0,0,183,184,7,16,0,0,184,185,7,10,0,
        0,185,186,7,14,0,0,186,187,7,8,0,0,187,188,7,5,0,0,188,189,7,15,
        0,0,189,190,7,3,0,0,190,191,7,6,0,0,191,38,1,0,0,0,192,193,7,10,
        0,0,193,194,7,17,0,0,194,195,7,4,0,0,195,196,7,3,0,0,196,197,7,1,
        0,0,197,40,1,0,0,0,198,199,7,18,0,0,199,200,7,0,0,0,200,201,7,9,
        0,0,201,202,7,10,0,0,202,203,7,4,0,0,203,204,7,3,0,0,204,42,1,0,
        0,0,205,206,7,14,0,0,206,207,7,18,0,0,207,208,7,1,0,0,208,209,7,
        1,0,0,209,210,7,3,0,0,210,211,7,15,0,0,211,212,7,4,0,0,212,44,1,
        0,0,0,213,214,7,16,0,0,214,215,7,10,0,0,215,216,7,14,0,0,216,217,
        7,8,0,0,217,218,7,5,0,0,218,219,7,15,0,0,219,220,7,3,0,0,220,46,
        1,0,0,0,221,222,7,10,0,0,222,223,7,9,0,0,223,224,7,9,0,0,224,48,
        1,0,0,0,225,226,7,4,0,0,226,227,7,10,0,0,227,228,7,11,0,0,228,229,
        7,17,0,0,229,230,7,3,0,0,230,50,1,0,0,0,231,232,7,9,0,0,232,233,
        7,3,0,0,233,234,7,6,0,0,234,235,7,14,0,0,235,52,1,0,0,0,236,237,
        7,9,0,0,237,238,7,3,0,0,238,239,7,6,0,0,239,240,7,14,0,0,240,241,
        7,1,0,0,241,242,7,5,0,0,242,243,7,11,0,0,243,244,7,3,0,0,244,54,
        1,0,0,0,245,246,7,19,0,0,246,247,7,3,0,0,247,248,7,1,0,0,248,249,
        7,6,0,0,249,250,7,5,0,0,250,251,7,2,0,0,251,252,7,15,0,0,252,253,
        7,6,0,0,253,56,1,0,0,0,254,255,7,19,0,0,255,256,7,3,0,0,256,257,
        7,1,0,0,257,258,7,6,0,0,258,259,7,5,0,0,259,260,7,2,0,0,260,261,
        7,15,0,0,261,58,1,0,0,0,262,263,7,6,0,0,263,264,7,3,0,0,264,265,
        7,4,0,0,265,60,1,0,0,0,266,267,7,17,0,0,267,268,7,2,0,0,268,269,
        7,10,0,0,269,270,7,9,0,0,270,62,1,0,0,0,271,272,7,9,0,0,272,273,
        7,10,0,0,273,274,7,4,0,0,274,275,7,10,0,0,275,64,1,0,0,0,276,277,
        7,5,0,0,277,278,7,15,0,0,278,279,7,4,0,0,279,280,7,2,0,0,280,66,
        1,0,0,0,281,282,7,6,0,0,282,283,7,3,0,0,283,284,7,17,0,0,284,285,
        7,3,0,0,285,286,7,14,0,0,286,287,7,4,0,0,287,68,1,0,0,0,288,289,
        7,12,0,0,289,290,7,1,0,0,290,291,7,2,0,0,291,292,7,16,0,0,292,70,
        1,0,0,0,293,294,7,7,0,0,294,295,7,8,0,0,295,296,7,3,0,0,296,297,
        7,1,0,0,297,298,7,3,0,0,298,72,1,0,0,0,299,300,7,20,0,0,300,301,
        7,3,0,0,301,302,7,21,0,0,302,74,1,0,0,0,303,304,7,4,0,0,304,305,
        7,10,0,0,305,306,7,11,0,0,306,307,7,17,0,0,307,308,7,3,0,0,308,309,
        7,6,0,0,309,76,1,0,0,0,310,311,7,4,0,0,311,312,7,1,0,0,312,313,7,
        18,0,0,313,314,7,3,0,0,314,78,1,0,0,0,315,316,7,12,0,0,316,317,7,
        10,0,0,317,318,7,17,0,0,318,319,7,6,0,0,319,320,7,3,0,0,320,80,1,
        0,0,0,321,325,7,22,0,0,322,324,7,23,0,0,323,322,1,0,0,0,324,327,
        1,0,0,0,325,323,1,0,0,0,325,326,1,0,0,0,326,82,1,0,0,0,327,325,1,
        0,0,0,328,333,3,15,7,0,329,332,3,85,42,0,330,332,3,91,45,0,331,329,
        1,0,0,0,331,330,1,0,0,0,332,335,1,0,0,0,333,331,1,0,0,0,333,334,
        1,0,0,0,334,336,1,0,0,0,335,333,1,0,0,0,336,337,3,15,7,0,337,84,
        1,0,0,0,338,341,5,92,0,0,339,342,7,24,0,0,340,342,3,87,43,0,341,
        339,1,0,0,0,341,340,1,0,0,0,342,86,1,0,0,0,343,344,7,18,0,0,344,
        345,3,89,44,0,345,346,3,89,44,0,346,347,3,89,44,0,347,348,3,89,44,
        0,348,88,1,0,0,0,349,350,7,25,0,0,350,90,1,0,0,0,351,352,8,26,0,
        0,352,92,1,0,0,0,353,355,5,45,0,0,354,353,1,0,0,0,354,355,1,0,0,
        0,355,356,1,0,0,0,356,363,3,95,47,0,357,359,5,46,0,0,358,360,7,27,
        0,0,359,358,1,0,0,0,360,361,1,0,0,0,361,359,1,0,0,0,361,362,1,0,
        0,0,362,364,1,0,0,0,363,357,1,0,0,0,363,364,1,0,0,0,364,366,1,0,
        0,0,365,367,3,97,48,0,366,365,1,0,0,0,366,367,1,0,0,0,367,94,1,0,
        0,0,368,377,5,48,0,0,369,373,7,28,0,0,370,372,7,27,0,0,371,370,1,
        0,0,0,372,375,1,0,0,0,373,371,1,0,0,0,373,374,1,0,0,0,374,377,1,
        0,0,0,375,373,1,0,0,0,376,368,1,0,0,0,376,369,1,0,0,0,377,96,1,0,
        0,0,378,380,7,3,0,0,379,381,7,29,0,0,380,379,1,0,0,0,380,381,1,0,
        0,0,381,382,1,0,0,0,382,383,3,95,47,0,383,98,1,0,0,0,384,386,7,30,
        0,0,385,384,1,0,0,0,386,387,1,0,0,0,387,385,1,0,0,0,387,388,1,0,
        0,0,388,389,1,0,0,0,389,390,6,49,0,0,390,100,1,0,0,0,13,0,325,331,
        333,341,354,361,363,366,373,376,380,387,1,6,0,0
    ]

class magicdbLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    SCOL = 1
    DOT = 2
    OPEN_PAR = 3
    CLOSE_PAR = 4
    COMMA = 5
    ASSIGN = 6
    STAR = 7
    QUOTA = 8
    PROPERTIES = 9
    WITH = 10
    DROP = 11
    DATABASE = 12
    IF = 13
    EXISTS = 14
    SHOW = 15
    DATABASES = 16
    CREATE = 17
    NOT = 18
    MACHINES = 19
    ALTER = 20
    UPDATE = 21
    CURRENT = 22
    MACHINE = 23
    ADD = 24
    TABLE = 25
    DESC = 26
    DESCRIBE = 27
    VERSIONS = 28
    VERSION = 29
    SET = 30
    LOAD = 31
    DATA = 32
    INTO = 33
    SELECT = 34
    FROM = 35
    WHERE = 36
    KEY = 37
    TABLES = 38
    TRUE = 39
    FALSE = 40
    VARNAME = 41
    STRING = 42
    NUMBER = 43
    WS = 44

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'.'", "'('", "')'", "','", "'='", "'*'", "'\"'", "'PROPERTIES'", 
            "'WITH'", "'DROP'", "'DATABASE'", "'IF'", "'EXISTS'", "'SHOW'", 
            "'DATABASES'", "'CREATE'", "'NOT'", "'MACHINES'", "'ALTER'", 
            "'UPDATE'", "'CURRENT'", "'MACHINE'", "'ADD'", "'TABLE'", "'DESC'", 
            "'DESCRIBE'", "'VERSIONS'", "'VERSION'", "'SET'", "'LOAD'", 
            "'DATA'", "'INTO'", "'SELECT'", "'FROM'", "'WHERE'", "'KEY'", 
            "'TABLES'", "'TRUE'", "'FALSE'" ]

    symbolicNames = [ "<INVALID>",
            "SCOL", "DOT", "OPEN_PAR", "CLOSE_PAR", "COMMA", "ASSIGN", "STAR", 
            "QUOTA", "PROPERTIES", "WITH", "DROP", "DATABASE", "IF", "EXISTS", 
            "SHOW", "DATABASES", "CREATE", "NOT", "MACHINES", "ALTER", "UPDATE", 
            "CURRENT", "MACHINE", "ADD", "TABLE", "DESC", "DESCRIBE", "VERSIONS", 
            "VERSION", "SET", "LOAD", "DATA", "INTO", "SELECT", "FROM", 
            "WHERE", "KEY", "TABLES", "TRUE", "FALSE", "VARNAME", "STRING", 
            "NUMBER", "WS" ]

    ruleNames = [ "SCOL", "DOT", "OPEN_PAR", "CLOSE_PAR", "COMMA", "ASSIGN", 
                  "STAR", "QUOTA", "PROPERTIES", "WITH", "DROP", "DATABASE", 
                  "IF", "EXISTS", "SHOW", "DATABASES", "CREATE", "NOT", 
                  "MACHINES", "ALTER", "UPDATE", "CURRENT", "MACHINE", "ADD", 
                  "TABLE", "DESC", "DESCRIBE", "VERSIONS", "VERSION", "SET", 
                  "LOAD", "DATA", "INTO", "SELECT", "FROM", "WHERE", "KEY", 
                  "TABLES", "TRUE", "FALSE", "VARNAME", "STRING", "ESC", 
                  "UNICODE", "HEX", "SAFECODEPOINT", "NUMBER", "INT", "EXP", 
                  "WS" ]

    grammarFileName = "magicdbLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


